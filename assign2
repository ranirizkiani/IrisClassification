import csv
import random
import math

with open('C:/Users/Fahmi Zufarian/Downloads/Iris/iris_dataset.csv', newline='') as csvfile:
     spamreader = csv.reader(csvfile, delimiter=',', quotechar='|')
     spamreader = list(spamreader)
       
Theta_1=random.random()
Theta_2=random.random()
Theta_3=random.random()
Theta_4=random.random()
Theta_5=random.random()
Theta_6=random.random()
Theta_7=random.random()
Theta_8=random.random()
Bias=random.random()
Bias_2=random.random()

lrate=0.1

class target:
    def __init__(self, Theta_1, Theta_2,Theta_3,Theta_4,spamreader,Bias):
      self.Theta_1 = Theta_1
      self.Theta_2 = Theta_2
      self.Theta_3 = Theta_3
      self.Theta_4 = Theta_4
      self.spamreader = spamreader
target = []
i=0
for i in range(149):
 target.append(i)
 target[i]=float(spamreader[i][0])*Theta_1+float(spamreader[i][1])*Theta_2+float(spamreader[i][2])*Theta_3+float(spamreader[i][3])*Theta_4+Bias
 i = i+1

class target2:
    def __init__(self, Theta_5, Theta_6,Theta_7,Theta_8,spamreader,Bias_2):
      self.Theta_5 = Theta_5
      self.Theta_6 = Theta_6
      self.Theta_7 = Theta_7
      self.Theta_8 = Theta_8
      self.spamreader = spamreader
target2 = []
i=0
for i in range(149):
 target2.append(i)
 target2[i]=float(spamreader[i][0])*Theta_5+float(spamreader[i][1])*Theta_6+float(spamreader[i][2])*Theta_7+float(spamreader[i][3])*Theta_8+Bias_2
 i = i+1

class sigmoid:
    def __init__(self, target):
      self.target = target
sigmoid = []
i=0
for i in range(149):
 sigmoid.append(i)
 sigmoid[i]=1/(1+math.exp(-target[i]))
 i = i+1

class sigmoid_2:
    def __init__(self, target):
      self.target2 = target2
sigmoid2 = []
i=0
for i in range(149):
 sigmoid2.append(i)
 sigmoid2[i]=1/(1+math.exp(-target2[i]))
 i = i+1

class prediction:
    def __init__(self, sigmoid):
      self.sigmoid = sigmoid
prediction = []
i=0
for i in range(149):
 prediction.append(i)
 if(sigmoid[i]<float(0.5)):
    prediction[i]=0
 else:
    prediction[i]=1
 i = i+1

class prediction2:
    def __init__(self, sigmoid):
      self.sigmoid2 = sigmoid2
prediction2 = []
i=0
for i in range(149):
 prediction2.append(i)
 if(sigmoid2[i]<float(0.5)):
    prediction2[i]=0
 else:
    prediction2[i]=1
 i = i+1

class error:
    def __init__(self, sigmoid, spamreader):
      self.sigmoid = sigmoid
      self.spamreader = spamreader
error = []
i=0
for i in range(149):
 error.append(i)
 error[i]=(sigmoid[i]-float(spamreader[i][5]))*(sigmoid[i]-float(spamreader[i][5]))
 i = i+1

class error2:
    def __init__(self, sigmoid, spamreader):
      self.sigmoid2 = sigmoid2
      self.spamreader = spamreader
error2 = []
i=0
for i in range(149):
 error2.append(i)
 error2[i]=(sigmoid2[i]-float(spamreader[i][6]))*(sigmoid2[i]-float(spamreader[i][6]))
 i = i+1

class d_theta_1:
 def __init__(self, sigmoid, spamreader):
  self.sigmoid = sigmoid
  self.spamreader= spamreader
d_theta1 = []
i=0
for i in range(149):
 d_theta1.append(i)
 d_theta1[i]=2*(sigmoid[i]-float(spamreader[i][5]))*(1-sigmoid[i])*sigmoid[i]*float(spamreader[i][0])
 i=i+1

class d_theta_2:
 def __init__(self, sigmoid, spamreader):
  self.sigmoid = sigmoid
  self.spamreader= spamreader
d_theta2 = []
i=0
for i in range(149):
 d_theta2.append(i)
 d_theta2[i]=2*(sigmoid[i]-float(spamreader[i][5]))*(1-sigmoid[i])*sigmoid[i]*float(spamreader[i][1])
 i=i+1

class d_theta_3:
 def __init__(self, sigmoid, spamreader):
  self.sigmoid = sigmoid
  self.spamreader= spamreader
d_theta3 = []
i=0
for i in range(149):
 d_theta3.append(i)
 d_theta3[i]=2*(sigmoid[i]-float(spamreader[i][5]))*(1-sigmoid[i])*sigmoid[i]*float(spamreader[i][2])
 i=i+1

class d_theta_4:
 def __init__(self, sigmoid, spamreader):
  self.sigmoid = sigmoid
  self.spamreader= spamreader
d_theta4 = []
i=0
for i in range(149):
 d_theta4.append(i)
 d_theta4[i]=2*(sigmoid[i]-float(spamreader[i][5]))*(1-sigmoid[i])*sigmoid[i]*float(spamreader[i][3])
 i=i+1

class d_theta_5:
 def __init__(self, sigmoid_2, spamreader):
  self.sigmoid2 = sigmoid2
  self.spamreader= spamreader
d_theta5 = []
i=0
for i in range(149):
 d_theta5.append(i)
 d_theta5[i]=2*(sigmoid2[i]-float(spamreader[i][6]))*(1-sigmoid2[i])*sigmoid2[i]*float(spamreader[i][0])
 i=i+1

class d_theta_6:
 def __init__(self, sigmoid_2, spamreader):
  self.sigmoid2 = sigmoid2
  self.spamreader= spamreader
d_theta6 = []
i=0
for i in range(149):
 d_theta6.append(i)
 d_theta6[i]=2*(sigmoid2[i]-float(spamreader[i][6]))*(1-sigmoid2[i])*sigmoid2[i]*float(spamreader[i][1])
 i=i+1

class d_theta_7:
 def __init__(self, sigmoid_2, spamreader):
  self.sigmoid2 = sigmoid2
  self.spamreader= spamreader
d_theta7 = []
i=0
for i in range(149):
 d_theta7.append(i)
 d_theta7[i]=2*(sigmoid2[i]-float(spamreader[i][6]))*(1-sigmoid2[i])*sigmoid2[i]*float(spamreader[i][2])
 i=i+1

class d_theta_8:
 def __init__(self, sigmoid_2, spamreader):
  self.sigmoid2 = sigmoid2
  self.spamreader= spamreader
d_theta8 = []
i=0
for i in range(149):
 d_theta8.append(i)
 d_theta8[i]=2*(sigmoid2[i]-float(spamreader[i][6]))*(1-sigmoid2[i])*sigmoid2[i]*float(spamreader[i][3])
 i=i+1

class d_bias:
 def __init__(self, sigmoid, spamreader):
  self.sigmoid = sigmoid
  self.spamreader= spamreader
d_bias = []
i=0
for i in range(149):
 d_bias.append(i)
 d_bias[i]=2*(sigmoid[i]-float(spamreader[i][5]))*(1-sigmoid[i])*sigmoid[i]*1
 i=i+1 

class d_bias2:
 def __init__(self, sigmoid, spamreader):
  self.sigmoid2 = sigmoid2
  self.spamreader= spamreader
d_bias2 = []
i=0
for i in range(149):
 d_bias2.append(i)
 d_bias2[i]=2*(sigmoid2[i]-float(spamreader[i][6]))*(1-sigmoid2[i])*sigmoid2[i]*1
 i=i+1 

class new_theta1:
 def __init__(self, Theta_1, lrate, d_theta1):
  self.Theta_1 = Theta_1
  self.lrate = lrate
  self.d_theta1 = d_theta1
new_theta1 = []
i=0
for i in range(149):
 new_theta1.append(i)
 new_theta1[i]=(Theta_1-lrate*d_theta1[i])
 i=i+1

class new_theta2:
 def __init__(self, Theta_2, lrate, d_theta2):
  self.Theta_2 = Theta_2
  self.lrate = lrate
  self.d_theta2 = d_theta2
new_theta2 = []
i=0
for i in range(149):
 new_theta2.append(i)
 new_theta2[i]=(Theta_2-lrate*d_theta2[i])
 i=i+1

class new_theta3:
 def __init__(self, Theta_3, lrate, d_theta3):
  self.Theta_3 = Theta_3
  self.lrate = lrate
  self.d_theta3 = d_theta3
new_theta3 = []
i=0
for i in range(149):
 new_theta3.append(i)
 new_theta3[i]=(Theta_3-lrate*d_theta3[i])
 i=i+1

class new_theta4:
 def __init__(self, Theta_4, lrate, d_theta4):
  self.Theta_4 = Theta_4
  self.lrate = lrate
  self.d_theta4 = d_theta4
new_theta4 = []
i=0
for i in range(149):
 new_theta4.append(i)
 new_theta4[i]=(Theta_4-lrate*d_theta4[i])
 i=i+1

class new_theta5:
 def __init__(self, Theta_5, lrate, d_theta5):
  self.Theta_5 = Theta_5
  self.lrate = lrate
  self.d_theta5 = d_theta5
new_theta5 = []
i=0
for i in range(149):
 new_theta5.append(i)
 new_theta5[i]=(Theta_5-lrate*d_theta5[i])
 i=i+1

class new_theta6:
 def __init__(self, Theta_6, lrate, d_theta6):
  self.Theta_6 = Theta_6
  self.lrate = lrate
  self.d_theta6 = d_theta6
new_theta6 = []
i=0
for i in range(149):
 new_theta6.append(i)
 new_theta6[i]=(Theta_6-lrate*d_theta6[i])
 i=i+1

class new_theta7:
 def __init__(self, Theta_7, lrate, d_theta7):
  self.Theta_7 = Theta_7
  self.lrate = lrate
  self.d_theta7 = d_theta7
new_theta7 = []
i=0
for i in range(149):
 new_theta7.append(i)
 new_theta7[i]=(Theta_7-lrate*d_theta7[i])
 i=i+1

class new_theta8:
 def __init__(self, Theta_8, lrate, d_theta8):
  self.Theta_8 = Theta_8
  self.lrate = lrate
  self.d_theta8 = d_theta8
new_theta8 = []
i=0
for i in range(149):
 new_theta8.append(i)
 new_theta8[i]=(Theta_8-lrate*d_theta8[i])
 i=i+1

class new_bias:
 def __init__(self, Bias, lrate, d_bias):
  self.Bias = Bias
  self.lrate = lrate
  self.d_bias = d_bias
new_bias = []
i=0
for i in range(149):
 new_bias.append(i)
 new_bias[i]=(Bias-lrate*d_bias[i])
 i=i+1

class new_bias2:
 def __init__(self, Bias_2, lrate, d_bias2):
  self.Bias_2 = Bias_2
  self.lrate = lrate
  self.d_bias2 = d_bias2
new_bias2 = []
i=0
for i in range(149):
 new_bias2.append(i)
 new_bias2[i]=(Bias_2-lrate*d_bias2[i])
 i=i+1

class error_avg:
 def __init__(self, error):
  self.error = error
error_avg = []
i=0
for i in range(149):
 error_avg.append(i)
 error_avg[i]=(error[i]/150)
 print("Error Average: %s" % (error_avg[i]))
 i=i+1

class error_avg2:
 def __init__(self, error2):
  self.error2 = error2
error_avg2 = []
i=0
for i in range(149):
 error_avg2.append(i)
 error_avg2[i]=(error2[i]/150)
 print("Error Average2: %s" % (error_avg2[i]))
 i=i+1

class accurate:
 def __init__(self, spamreader, prediction, prediction2):
  self.spamreader = spamreader
  self.prediction = prediction
  self.prediction2 = prediction2
accurate = []
i=0
for i in range(149):
 accurate.append(i)
 accurate[i]=(spamreader[i][5] == prediction and spamreader[i][6] == prediction2)
 i=i+1

class accu_avg:
 def __init__(self, accurate):
  self.accurate = accurate
accu_avg = []
i=0
for i in range(149):
 accu_avg.append(i)
 accu_avg[i]=(accurate[i]/150)
 print("Accurate Average: %s" % (accu_avg[i]))
 i=i+1